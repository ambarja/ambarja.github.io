{
  "hash": "86cda579dc4bfcaf9d03f7c83ff22230",
  "result": {
    "markdown": "---\ntitle: \"Making streamgraphs in R\"\ndescription: |\n  TidyTuesday May 03,2022 ; Power and Energy Capacity visualization.\nauthor:\n  - name: Karat Sidhu\n    url: {}\ndate: 2022-05-03\ncategories:\n  - TidyTuesday\n  - Data-Viz\n  - TidyVerse\ntoc: true\ntoc-title: Table of contents\ntoc-location: left\n---\n\n\n\nTidyTuesday Dataset for Week of May 03, 2022. The dataset featured the hidden gems files from Berkeley Lab/Dept of Energy.\n\n## Loading Libraries\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggstream)\nlibrary(tidyverse)\n```\n\n::: {.cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──\n```\n:::\n\n::: {.cell-output-stderr}\n```\n✔ ggplot2 3.3.6     ✔ purrr   0.3.4\n✔ tibble  3.1.7     ✔ dplyr   1.0.9\n✔ tidyr   1.2.0     ✔ stringr 1.4.0\n✔ readr   2.1.2     ✔ forcats 0.5.1\n```\n:::\n\n::: {.cell-output-stderr}\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(patchwork)\nlibrary(showtext)\n```\n\n::: {.cell-output-stderr}\n```\nLoading required package: sysfonts\n```\n:::\n\n::: {.cell-output-stderr}\n```\nLoading required package: showtextdb\n```\n:::\n\n```{.r .cell-code}\nshowtext_opts(dpi = 450)\nshowtext_auto(enable = TRUE)\nlibrary(ggtext)\nfont_add_google(family = \"Bangers\", name = \"Bangers\")\n```\n:::\n\n## Loading and cleaning Data\n\n::: {.cell}\n\n```{.r .cell-code}\ncapacity <-\n  readr::read_csv(\n    'https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-05-03/capacity.csv'\n  )\n```\n\n::: {.cell-output-stderr}\n```\nRows: 49 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): type\ndbl (6): year, standalone_prior, hybrid_prior, standalone_new, hybrid_new, t...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nwind <-\n  readr::read_csv(\n    'https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-05-03/wind.csv'\n  )\n```\n\n::: {.cell-output-stderr}\n```\nRows: 328 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl  (2): wind_mwh, wind_capacity\ndate (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nsolar <-\n  readr::read_csv(\n    'https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-05-03/solar.csv'\n  )\n```\n\n::: {.cell-output-stderr}\n```\nRows: 328 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl  (2): solar_mwh, solar_capacity\ndate (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\naverage_cost <-\n  readr::read_csv(\n    'https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-05-03/average_cost.csv'\n  )\n```\n\n::: {.cell-output-stderr}\n```\nRows: 13 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (4): year, gas_mwh, solar_mwh, wind_mwh\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\ncapacity <- capacity %>%\n  mutate(across(where(anyNA), ~ replace_na(., 0)))\ncapacity <- capacity %>%\n  mutate(prior = standalone_prior + hybrid_prior) %>%\n  mutate(new = standalone_new + hybrid_new)\n```\n:::\n\n\n## Making the plot\n\n::: {.cell}\n\n```{.r .cell-code}\ncolors_legend <- c(\"#FFB327\",\n                   \"#D1F1F9\",\n                   \"#4F607C\",\n                   \"#c5b689\",\n                   \"#8E038E\",\n                   \"#5A6D87\",\n                   \"#000000\")\nplot1 <- ggplot(capacity, aes(year, prior, fill = type)) +\n  geom_stream(\n    extra_span = .25,\n    true_range = \"none\",\n    bw = .85,\n    size = 1.25,\n    sorting = \"onset\"\n  ) +\n  geom_stream(\n    geom = \"contour\",\n    color = \"white\",\n    extra_span = .25,\n    true_range = \"none\",\n    bw = .85,\n    size = 0.09,\n    sorting = \"onset\"\n  ) +\n  scale_fill_manual(values = colors_legend,\n                    name = NULL) +\n  scale_x_continuous(breaks = c(2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020)) +\n  theme_minimal(base_family = \"Bangers\") +\n  theme(\n    plot.background = element_rect(fill = \"grey84\", color = NA),\n    panel.grid = element_blank(),\n    axis.title = element_blank(),\n    axis.text.y = element_blank(),\n    legend.position = \"bottom\",\n    legend.text = element_text(color = \"grey40\", size = 14),\n    legend.box.margin = margin(t = 30),\n    legend.background = element_rect(color = \"grey40\",\n                                     size = .3,\n                                     fill = \"grey95\"),\n    legend.key.height = unit(.25, \"lines\"),\n    legend.key.width = unit(2.5, \"lines\"),\n    plot.margin = margin(rep(20, 4))\n  ) +\n  labs(title = \"Prior Generation Capacity (Gigawatts)\") +\n  theme(plot.title = element_text(hjust = 0.5))\nplot1\n```\n\n::: {.cell-output-display}\n![](making-streamgraphs-in-r_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot2 <- ggplot(capacity, aes(year, new, fill = type)) +\n  geom_stream(\n    extra_span = .25,\n    true_range = \"none\",\n    bw = .85,\n    size = 1.25,\n    sorting = \"onset\"\n  ) +\n  geom_stream(\n    geom = \"contour\",\n    color = \"white\",\n    extra_span = .25,\n    true_range = \"none\",\n    bw = .85,\n    size = 0.02,\n    sorting = \"onset\"\n  ) +\n  scale_fill_manual(values = colors_legend,\n                    name = NULL) +\n  scale_x_continuous(breaks = c(2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020)) +\n  theme_minimal(base_family = \"Bangers\") +\n  theme(\n    plot.background = element_rect(fill = \"grey84\", color = NA),\n    panel.grid = element_blank(),\n    axis.title = element_blank(),\n    axis.text.y = element_blank(),\n    legend.position = \"none\",\n    plot.margin = margin(rep(20, 4))\n  ) +\n  labs(title = \"New Generation Capacity (Gigawatts)\") +\n  theme(plot.title = element_text(hjust = 0.5))\nplot_final <- plot1 / plot2 +\n  plot_annotation(\n    title = 'Power Generation Capacity',\n    subtitle = 'The shreamcharts describe the power generation from various sources (solar, nuclear, wind, etc) along with <br>\n    their capacity over the years. The graphs are separated into New and Prior Generation <br> In Gigawatts. <br> ',\n    caption = 'Data: Berkeley Lab | Graphic: Github.com/SidhuK ',\n    theme = theme(\n      plot.title = element_text(size = 35, hjust = 0.5),\n      plot.subtitle = element_markdown(size = 15, hjust = 0.5),\n      plot.caption = element_text(size = 11, hjust = 0.5),\n      plot.background = element_rect(fill = \"grey84\", color = NA)\n    )\n  ) &\n  theme(text = element_text('Bangers'))\n```\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_final\n```\n\n::: {.cell-output-display}\n![](making-streamgraphs-in-r_files/figure-html/unnamed-chunk-4-1.png){width=768}\n:::\n:::\n\n\n### Visit my TidyTuesday Repo for a better look.\n",
    "supporting": [
      "making-streamgraphs-in-r_files/figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": [],
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}